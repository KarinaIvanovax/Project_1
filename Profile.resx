<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        duJGAAAAAElFTkSuQmCC
</value>
  </data>
</root>