<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        16kfn96eTAI1X19Of5zul1wqYFI1Gccj0lvSpjyXO1IfSk9M67w7/BOpWxdNX335Xrc7pVem76RunTRf
        NQfBf0s1Y6HLBKzMjVJNrXlq6nY8Las6ONdMafdPU09bWqcju3XQ9NUlt3WoiXnqur6b+Tanugfr0FRz
        LMA+qw+OugO9bj7xnPfmVnOeH5ZukaYwx1Ss2l19IZ9SXearG3pPS93ytfzq2F2XaR6VXCLgItUkHc9I
        NXtVt0NpM3ttmsIZqVuepu97aQo3TnVd+bupW642sy+mZ6arJTiPG6SaX/xbqdt5tNlN9QWgPoS65Wn6
        6gN6CrWvdMvTdlRjtv6OfzIxuHqu9FXJ7Fzb3f9OU3BfyHzVHeBT8GjnOL0t1eOEDOae6Z2p2ym0fb05
        TcHcD/NVN3pN4a9Stzxtb+9ONckYW+7O6a2p2wm0vf11mkK9va1bnqbvY2kKR6Vuedr+fBHYUvdJ9Zfb
        /aVr+3tXmkJNRtMtT9Pn71RTVb8k3iax4eoaf13n6f6SNU71zv4p/K/ULU/T9+o0hU+mbnkaq5rhse4P
        u3piw1wn1eslTdOpqqYMnsJ/Sd3yNH31SNcU3Nipc1czDNaLiC6TWLirpBckz/Dq3NXUzRdPq/bzqVue
        pu/n0qrVy2VM862uY1O9npgFqoP7v01fSd1fnnTttGp1ialblqav3sK5anXmsFuWVNXMgnVm+YqJhbht
        el/q/sKkc6onQFbtCslvjOuvtvnl06rdNXXLk85dPf5778SMatreI5Lr/NpJh6QpfDh1y9N01bv3p1D7
        SLc86fw5GzCjxySn+7Uv/U6awn9N3fI0Xb+bpvDs1C1PurCOS7dOrEG9oesvU/cXIe2tqWYDvF/qlqfp
        um+awhtTtzxpb52eHpeY0MOT3/q1v30uTaHuA/BWwPVVL3OZ4vp/OSF1y5R2Us0bcNnECl031VSu3QaX
        9qWpXgVq+tj1NdW0zldOdV23W6a00z6Urp9Ygfsnv/VrVf2rNIVfTN3ytPoelabwgNQtT9rXTksPSRyA
        Q5Nv5Fplz09TqFPS30zdMrW6vpXqkssUnpO6ZUr7Uz2d9ozEfqg7truNKh1IdXpuKv89dcvU6nplmso7
        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
        J35RZ3jeHwAAAABJRU5ErkJggg==
</value>
  </data>
</root>